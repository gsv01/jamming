{"ast":null,"code":"var _jsxFileName = \"/home/gurpreet/Desktop/Course/step2/fullstack/jamming/jamming/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport SearchResults from '../SearchResults/SearchResults.js';\nimport Playlist from '../Playlist/Playlist.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [{\n        name: 'name1',\n        artist: 'artist1',\n        album: 'album1',\n        id: 0\n      }, {\n        name: 'name2',\n        artist: 'artist2',\n        album: 'album2',\n        id: 1\n      }, {\n        name: 'name3',\n        artist: 'artist3',\n        album: 'album3',\n        id: 2\n      }],\n      playlistName: 'Gym Songs',\n      playlistTracks: [{\n        name: 'name4',\n        artist: 'artist4',\n        album: 'album4',\n        id: 4\n      }, {\n        name: 'name5',\n        artist: 'artist5',\n        album: 'album5',\n        id: 5\n      }]\n    }; //Bind the function because it is modifying the states\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n  }\n\n  addTrack(track) {\n    // If flag is 0 means that we did not find the track\n    // in Playlist and we are going to add it to the PlaylistTracks\n    let currentId = track.id;\n    let flag = 0;\n\n    for (let i = 0; i < this.state.playlistTracks.length; i++) {\n      if (currentId === this.state.playlistTracks[i].id) {\n        flag = 1; //Found\n\n        break; //Exit loop\n      }\n    }\n\n    if (flag === 0) {\n      //If found\n      let tempList = this.state.playlistTracks; //Make a copy\n\n      tempList.push(track); //Add to copy\n\n      this.setState({\n        playlistTracks: tempList\n      });\n    }\n  }\n\n  removeTrack(track) {\n    //make a copy of the PlaylistTracks\n    let tempList = this.state.playlistTracks; //Once we know the position lets remove it from our tempList\n\n    const index = tempList.indexOf(track);\n\n    if (index > -1) {\n      //If it is negative then it is not found\n      tempList.splice(index, 1);\n    } //Update the states\n\n\n    this.setState({\n      playlistTracks: tempList\n    });\n  } // Change the playlist name\n\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  } //Generates an array of uri values called trackURIs from the playlistTracks property\n\n\n  savePlaylist() {\n    let trackURIs = [];\n\n    for (let i = 0; i < this.state.playlistTracks.length; i++) {\n      trackURIs.push(this.state.playlistTracks[i].uri);\n    }\n\n    return trackURIs;\n  } //\n\n\n  search(term) {\n    console.log(term);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            isRemoval: false,\n            onAdd: this.addTrack,\n            searchResults: this.state.searchResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            onSave: this.savePlaylist,\n            onNameChange: this.updatePlaylistName,\n            isRemoval: true,\n            onRemove: this.removeTrack,\n            playlistName: this.state.playlistName,\n            playlistTracks: this.state.playlistTracks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/gurpreet/Desktop/Course/step2/fullstack/jamming/jamming/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","App","Component","constructor","props","state","searchResults","name","artist","album","id","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","track","currentId","flag","i","length","tempList","push","setState","index","indexOf","splice","trackURIs","uri","search","term","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport SearchBar from '../SearchBar/SearchBar.js'\nimport SearchResults from '../SearchResults/SearchResults.js';\nimport Playlist from '../Playlist/Playlist.js';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      searchResults : [\n        {name: 'name1',artist: 'artist1',album: 'album1',id: 0},\n        {name: 'name2',artist: 'artist2',album: 'album2',id: 1},\n        {name: 'name3',artist: 'artist3',album: 'album3',id: 2}\n      ],\n      playlistName:'Gym Songs',\n      playlistTracks: [\n        {name: 'name4',artist: 'artist4',album: 'album4',id: 4},\n        {name: 'name5',artist: 'artist5',album: 'album5',id: 5}\n      ]\n    };\n\n    //Bind the function because it is modifying the states\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n  }\n\n\n  addTrack(track){\n    // If flag is 0 means that we did not find the track\n    // in Playlist and we are going to add it to the PlaylistTracks\n    let currentId = track.id;\n    let flag = 0;\n\n\n\n    for( let i=0 ; i < this.state.playlistTracks.length ; i++){\n      if( currentId === this.state.playlistTracks[i].id ){\n        flag = 1;\n        //Found\n        break;\n        //Exit loop\n      }\n    }\n\n    if(flag === 0){ //If found\n      let tempList = this.state.playlistTracks; //Make a copy\n      tempList.push(track); //Add to copy\n      this.setState({\n        playlistTracks: tempList\n      });\n\n    }\n\n\n  }\n\n\n  removeTrack(track){\n\n    //make a copy of the PlaylistTracks\n    let tempList = this.state.playlistTracks;\n\n    //Once we know the position lets remove it from our tempList\n    const index = tempList.indexOf(track);\n    if (index > -1) { //If it is negative then it is not found\n      tempList.splice(index, 1);\n    }\n\n    //Update the states\n    this.setState({\n      playlistTracks: tempList\n    });\n\n  }\n\n\n  // Change the playlist name\n  updatePlaylistName(name){\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  //Generates an array of uri values called trackURIs from the playlistTracks property\n  savePlaylist(){\n    let trackURIs = [];\n\n    for( let i=0 ; i < this.state.playlistTracks.length ; i++){\n      trackURIs.push(this.state.playlistTracks[i].uri);\n    }\n\n    return trackURIs;\n  }\n\n  //\n  search(term){\n    console.log(term);\n  }\n\n\n  render(){\n    return (\n      <div>\n        <h1>Ja<span class=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar/>\n          <div className=\"App-playlist\">\n            <SearchResults isRemoval={false} onAdd={this.addTrack} searchResults={this.state.searchResults}/>\n            <Playlist onSave={this.savePlaylist} onNameChange={this.updatePlaylistName} isRemoval={true} onRemove={this.removeTrack} playlistName={this.state.playlistName} playlistTracks={this.state.playlistTracks}/>\n          </div>\n        </div>\n    </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}